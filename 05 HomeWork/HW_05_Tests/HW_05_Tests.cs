using HW_05;
using System;
using HW5 = HW_05.HW_05;

namespace HW_05_Tests
{
    [TestClass]
    public sealed class HW_05_Tests
    {
        [TestMethod]
        public void HW_05_01()
        {
            int actual;
            int expected;

            actual = HW5.HW_05_01("a123456a bb __ 123456//12345\\1234567==++  ");
            expected = 2;
            Assert.AreEqual(expected, actual);
        }

        [TestMethod]
        public void HW_05_02()
        {
            string source = 
                "Я? Я я я! Он или ты, мы или вы? Что это? " +
                "Дана строка — предложение на русском языке. " +
                "Поменять местами первую и последнюю буквы каждого слова.";
            string expected =
                "Я? Я я я! нО или ыт, ым или ыв? отЧ отэ? " +
                "аанД атрокс — ередложенип ан мусскор езыкя. " +
                "ьоменятП иестамм юервуп и юоследнюп ыуквб оаждогк аловс.";

            string actual = source.HW_05_02();
            Assert.AreEqual(expected, actual);

            Console.WriteLine(source);
            Console.WriteLine(actual);
        }

        [TestMethod]
        public void HW_05_03()
        {
            string source = 
                "3. Дана строка. Посчитать, сколько смайликов в ней содержится." +
                "Смайликом будем считать последовательность символов, удовлетворяющую условиям:" +
                "первым символом является либо ; (точка с запятой) либо : (двоеточие) ровно один раз" +
                "далее может идти символ - (минус) сколько угодно раз (в том числе символ минус может идти ноль раз)" +
                "в конце обязательно идет некоторое количество (не меньше одной) одинаковых скобок из следующего набора:" +
                " (, ), [, ]." +
                "внутри смайлика не может встречаться никаких других символов." +
                ":(" +      //смайлик
                ":-(" +     //смайлик
                ":-((" +    //смайлик
                ":--((" +   //смайлик
                ";]" +      //смайлик
                ";]]" +     //смайлик
                ";-]" +     //смайлик
                ";--]]" +   //смайлик
                ":--(())" + //смайлик :--((
                ";:))" +    //смайлик :))
                ";-s-]]" +  //не смайлик
                ";--d]]";   //не смайлик
            int actual = HW5.HW_05_03(source);
            int expected = 10;
            Assert.AreEqual(expected, actual);
        }

        [TestMethod]
        public void HW_05_04()
        {
            string source =
                "+7 (863) 297-51-11, \r\n" +
                "8 (863) 297-51-11, \r\n" +
                "+7-(863)-297-51-11\r\n" +
                "+7 (863)-297-51-11 //не валидный\r\n" +
                "+7-(863) 297-51-11 //не валидный\r\n" +
                "+7(863)297-51-11 \r\n" +
                "+7 (1234) 97-51-11 \r\n" +
                "+7 (1234) 197-51-11 //не валидный \r\n" +
                "+7 (12345) 7-51-11 \r\n" +
                "+7 (12345) 17-51-11 //не валидный \r\n" +
                "+7 (12345) 127-51-11 //не валидный \r\n" +
                "+7 (863) 297-51-11 " +
                "+7 (863) 297-51-11 \r\n";
            Console.WriteLine(source);
            Console.WriteLine(source.HW_05_04());
        }

        [TestMethod]
        public void HW_05_05()
        {
            string source = "А123ВЕ77 - тип 1 автомобили" + Environment.NewLine +
                "А123ВЕ177 - тип 1 с регионом из 3 цифр" + Environment.NewLine +
                "1234АА77 - тип 4 для мотоциклов" + Environment.NewLine +
                "АО36578 - тип 1Б для легковых такси и автобусов" + Environment.NewLine +
                "АН733147 - тип 2 для автомобильных прицепов и полуприцепов" + Environment.NewLine +
                "8776АЕ64 - тип 4 регистрационные знаки мотоциклов" + Environment.NewLine +
                "СМ655К78 - тип 15 транзит для легковых, грузовых, грузопассажирских автомобилей, " +
                "автобусов, автомобильных прицепов и полуприцепов (регион на желтом фоне)" + Environment.NewLine +
                "123CD12377 - тип 9 для легковых автомобилей глав дипломатических представительств" + Environment.NewLine +
                "123D12377 - тип 10 для легковых, грузовых, грузопассажирских автомобилей и " +
                "автобусов дипломатических представительств, консульских учреждений, " +
                "в том числе возглавляемых почетными консульскими должностными лицами, " +
                "международных (межгосударственных) организаций и их сотрудников, " +
                "аккредитованных при Министерстве иностранных дел Российской Федерации" + Environment.NewLine +
                "138М01277 тип 11 Регистрационные знаки транспортных средств, зарегистрированных " +
                "на иностранных граждан" + Environment.NewLine +
                "ТАО00278 - тип 19 транзит для окончательно выезжающих за пределы Российской Федерации" + Environment.NewLine +
                "А123477 - тип 20 для легковых, грузовых, грузопассажирских автомобилей " +
                "и автобусов МВД России" + Environment.NewLine +
                "123А77 - тип 21 для автомобильных прицепов МВД России" + Environment.NewLine +
                "1234А77 - тип 22 для мотоциклов МВД России" + Environment.NewLine +
                "КАО00278 - тип 23 — Регистрационные знаки для классических (ретро) " +
                "легковых и грузовых автомобилей" + Environment.NewLine +
                "САО00278 - тип 26 — Регистрационные знаки для спортивных легковых и грузовых автомобилей";
            Console.WriteLine(source);
            Console.WriteLine("------------");

            IEnumerable<string> actual = source.HW_05_05();

            foreach (string s in actual)
                Console.WriteLine(s);
        }

        [TestMethod]
        public void HW_05_06()
        {
            string source = "10.222.111.001" +              Environment.NewLine +
                "10.222.111.1" +                            Environment.NewLine +
                "10.222.111.1234 - не валидный" +           Environment.NewLine +
                "001.002.003.004" +                         Environment.NewLine +
                "15.15.15.15" +                             Environment.NewLine +
                "255.255.255.255" +                         Environment.NewLine +
                "8.8.8.8" +                                 Environment.NewLine +
                "123.123.123.123" +                         Environment.NewLine +
                "545.454.454.455 - не валидный" +           Environment.NewLine +
                "300.030.300.003 - не валидный" +           Environment.NewLine +
                "256.256.256.256 - не валидный" +           Environment.NewLine +
                "255.255.255.256 - не валидный" +           Environment.NewLine +
                "0.0.0.0" +                                 Environment.NewLine +
                "1.2.3.4" +                                 Environment.NewLine +
                "192.168.100.0" +                           Environment.NewLine +
                "192.168.100.1" +                           Environment.NewLine +
                "01234.123.123.123 - не валидный" +         Environment.NewLine +
                "000.000.000.000";
            Console.WriteLine(source);
            Console.WriteLine("------------");

            string actual = source.HW_05_06("," + Environment.NewLine);
            Console.WriteLine(actual);
        }
    }
}
